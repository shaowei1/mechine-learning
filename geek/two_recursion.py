import copyclass two_recursion():    """    限定总和的情况下，求可能的加和方式．    用1, 2, 5, 10 几种货币，有几种方式组成　10 元    """    def __init__(self):        self.rewards = [1, 2, 5, 10]    def get(self, totalReward, result):        if totalReward == 0:            print(result)            return        elif (totalReward < 0):            return        else:            len_reward = len(self.rewards)            for i in range(len_reward):                # 这里不能使用简单的赋值，必须使用拷贝,因为上一次递归改变了引用的列表的值，原列表也会被改变                newresult = copy.copy(result)                newresult.append(self.rewards[i])                self.get(totalReward - self.rewards[i], newresult)                passif __name__ == '__main__':    totalReward = 10    lis = list()    res = two_recursion()    res.get(totalReward, lis)
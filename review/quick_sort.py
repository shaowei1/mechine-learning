# T(n) = O(nlogn) --> O(n^2)# S(n) = O(1)import copyimport datetimeimport randomclass Quick_Sort():    def __init__(self):        self.a = list()        for i in range(10000):            # 测试随机list            # self.a.append(random.randint(1, 100000))            # 已经排好序的list            self.a.append(i)        self.b = copy.copy(self.a)    def quick_sort(self, lis, left, right):        if left < right:            p = self.partition(lis, left, right)            self.quick_sort(lis, left, p - 1)            self.quick_sort(lis, p + 1, right)        return lis    def random_quick_sort(self, lis, left, right):        if left < right:            p = self.randomPartition(lis, left, right)            self.quick_sort(lis, left, p - 1)            self.quick_sort(lis, p + 1, right)        return lis    def partition(self, lis, left, right):        x = lis[right]        p = left - 1        for i in range(left, right):            if lis[i] <= x:                p += 1                lis[p], lis[i] = lis[i], lis[p]        lis[p + 1], lis[right] = lis[right], lis[p + 1]        return p + 1    def randomPartition(self, lis, left, right):        r = random.randint(left, right)        lis[r], lis[right] = lis[right], lis[r]        return self.partition(lis, left, right)    def cal_time(func):        def wrapper(*args):            time1 = datetime.datetime.now()            func(*args)            time2 = datetime.datetime.now()            return time2 - time1        return wrapper    @cal_time    def work1(self):        # a, _ = self.test_data()        self.quick_sort(self.a, 0, 10000 - 1)    @cal_time    def work2(self):        # a, _ = self.test_data()        self.random_quick_sort(self.b, 0, 10000 - 1)    def run(self):        time1 = self.work1()        time2 = self.work2()        print(time1)        print(time2)        print(self.a)        print(self.b)        print(self.a == self.b)if __name__ == '__main__':    import sys    sys.setrecursionlimit(1000000)    qs = Quick_Sort()    qs.run()
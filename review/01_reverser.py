def reverse_list():    s = ['my', 'dog', 'is', 'so', 'cute']    res = list(''.join(list(i)[::-1]) for i in s[::-1])    real_res = ['etuc', 'os', 'si', 'god', 'ym']    assert res == real_res, 'convert error'def Palindrome1():    """    Palindrome: 指一个顺着读和反过来读都一样的字符串    input : 34312332112332114    output1: 123321123321   最长对称的回文字段    output2: 343, 123321, 33, 11, ...   输出所有回文字段    O(n^3)    """    input = '34312332112332114'    lenth_str = len(input)    def longest(s):        l = [s[i:i + x + 1] for x in range(len(s)) for i in range(len(s) - x)]        l.reverse()        for i in l:            if shrinkCheckPalindrome(i, 0, len(i) - 1):                return i    def longestPalindrome(s):        for size in range(lenth_str, 1, -1):            low = 0            high = low + size - 1            while True:                if high > lenth_str - 1:                    break                if shrinkCheckPalindrome(input, low, high):                    return input[low: high + 1]                low += 1                high += 1        return input[0:1]    def shrinkCheckPalindrome(s, low, high):        assert low <= high, 'IndexError'        while (low <= high):            if s[low] == s[high]:                low += 1                high -= 1            else:                return False        return True    output1 = '123321123321'    output2 = [343, 123321, 33, 11]    return longest(input)import collectionsclass Solution():    def longestPalindrome(self, s):        ans = 0        for v in collections.Counter(s).values():            ans += v // 2 * 2            if ans % 2 == 0 and v % 2 == 1:                ans += 1        return ansdef _child_str():    def cut(s: str):        results = []        # x + 1 表示子字符串长度        for x in range(len(s)):            # i 表示偏移量            for i in range(len(s) - x):                results.append(s[i:i + x + 1])        return results    print(cut('abc'))if __name__ == '__main__':    input = '34312332112332114'    # reverse_list()    s = Solution()    result = Palindrome1()    print(result)pass